%!PS-Adobe-3.0
%%Creator: groff version 1.20.1
%%CreationDate: Mon Jan 10 22:29:53 2011
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.20 1
%%Pages: 6
%%PageOrder: Ascend
%%DocumentMedia: Default 595 842 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.20 1
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 595 842 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Courier
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 841.89 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron
/Zcaron/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Courier@0 ENC0/Courier RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(ARGT)72 48 Q 99.765(ABLE2\(3\) Ar)-.93 F
(gtable programmer')-.18 E 2.5(sm)-.55 G 99.765(anual ARGT)-2.5 F
(ABLE2\(3\))-.93 E/F1 10.95/Times-Bold@0 SF -.219(NA)72 84 S(ME).219 E
F0(ar)108 96 Q(gtable2 \255 an ANSI C library for parsing GNU style com\
mand line options)-.18 E F1(SYNOPSIS)72 112.8 Q/F2 10/Courier@0 SF
(#include <argtable2.h>)108 124.8 Q F0(struct)108 148.8 Q/F3 10
/Times-Bold@0 SF(ar)2.5 E(g_lit)-.1 E F0(struct)108 160.8 Q F3(ar)2.5 E
(g_int)-.1 E F0(struct)108 172.8 Q F3(ar)2.5 E(g_dbl)-.1 E F0(struct)108
184.8 Q F3(ar)2.5 E(g_str)-.1 E F0(struct)108 196.8 Q F3(ar)2.5 E(g_r)
-.1 E(ex)-.18 E F0(struct)108 208.8 Q F3(ar)2.5 E(g_\214le)-.1 E F0
(struct)108 220.8 Q F3(ar)2.5 E(g_date)-.1 E F0(struct)108 232.8 Q F3
(ar)2.5 E(g_r)-.1 E(em)-.18 E F0(struct)108 244.8 Q F3(ar)2.5 E(g_end)
-.1 E F0(struct)108 261.6 Q F3(ar)2.5 E(g_lit)-.1 E F0(*)A F3(ar)2.5 E
(g_lit0)-.1 E F0
(\(const char *shortopts, const char *longopts, const char *glossary\))A
(struct)108 273.6 Q F3(ar)2.5 E(g_lit)-.1 E F0(*)A F3(ar)2.5 E(g_lit1)
-.1 E F0
(\(const char *shortopts, const char *longopts, const char *glossary\))A
(struct)108 285.6 Q F3(ar)2.5 E(g_lit)-.1 E F0(*)A F3(ar)2.5 E(g_litn)
-.1 E F0(\(const char *shortopts, const char *longopts, int mincount, i\
nt maxcount, const char *glossary\))A(struct)108 302.4 Q F3(ar)2.5 E
(g_int)-.1 E F0(*)A F3(ar)2.5 E(g_int0)-.1 E F0(\(const char* shortopts\
, const char* longopts, const char* datatype, const char* glossary\))A
(struct)108 314.4 Q F3(ar)2.5 E(g_int)-.1 E F0(*)A F3(ar)2.5 E(g_int1)
-.1 E F0(\(const char *shortopts, const char *longopts, const char* dat\
atype, const char *glossary\))A(struct)108 326.4 Q F3(ar)2.5 E(g_int)-.1
E F0(*)A F3(ar)2.5 E(g_intn)-.1 E F0(\(const char *shortopts, const cha\
r *longopts, const char* datatype, int mincount, int maxcount, const ch\
ar *glossary\))A(struct)108 343.2 Q F3(ar)2.5 E(g_dbl)-.1 E F0(*)A F3
(ar)2.5 E(g_dbl0)-.1 E F0(\(const char *shortopts, const char *longopts\
, const char* datatype, const char *glossary\))A(struct)108 355.2 Q F3
(ar)2.5 E(g_dbl)-.1 E F0(*)A F3(ar)2.5 E(g_dbl1)-.1 E F0(\(const char *\
shortopts, const char *longopts, const char* datatype, const char *glos\
sary\))A(struct)108 367.2 Q F3(ar)2.5 E(g_dbl)-.1 E F0(*)A F3(ar)2.5 E
(g_dbln)-.1 E F0(\(const char *shortopts, const char *longopts, const c\
har* datatype, int mincount, int maxcount, const char *glossary\))A
(struct)108 384 Q F3(ar)2.5 E(g_str)-.1 E F0(*)A F3(ar)2.5 E(g_str0)-.1
E F0(\(const char *shortopts, const char *longopts, const char* datatyp\
e, const char *glossary\))A(struct)108 396 Q F3(ar)2.5 E(g_str)-.1 E F0
(*)A F3(ar)2.5 E(g_str1)-.1 E F0(\(const char *shortopts, const char *l\
ongopts, const char* datatype, const char *glossary\))A(struct)108 408 Q
F3(ar)2.5 E(g_str)-.1 E F0(*)A F3(ar)2.5 E(g_str)-.1 E(n)-.15 E F0(\(co\
nst char *shortopts, const char *longopts, const char* datatype, int mi\
ncount, int maxcount, const char *glossary\))A(struct)108 424.8 Q F3(ar)
2.5 E(g_r)-.1 E(ex)-.18 E F0(*)A F3(ar)2.5 E(g_r)-.1 E(ex0)-.18 E F0(\(\
const char* shortopts, const char* longopts, const char* pattern, const\
 char* datatype, int \215ags, const char* glossary\))A(struct)108 436.8
Q F3(ar)2.5 E(g_r)-.1 E(ex)-.18 E F0(*)A F3(ar)2.5 E(g_r)-.1 E(ex1)-.18
E F0(\(const char* shortopts, const char* longopts, const char* pattern\
, const char* datatype, int \215ags, const char* glossary\))A(struct)108
448.8 Q F3(ar)2.5 E(g_r)-.1 E(ex)-.18 E F0(*)A F3(ar)2.5 E(g_r)-.1 E
(exn)-.18 E F0(\(const char* shortopts, const char* longopts, const cha\
r* pattern, const char* datatype, int mincount, int maxcount, int \215a\
gs, const char* glossary\))A(struct)108 465.6 Q F3(ar)2.5 E(g_\214le)-.1
E F0(*)A F3(ar)2.5 E(g_\214le0)-.1 E F0(\(const char* shortopts, const \
char* longopts, const char* datatype, const char* glossary\))A(struct)
108 477.6 Q F3(ar)2.5 E(g_\214le)-.1 E F0(*)A F3(ar)2.5 E(g_\214le1)-.1
E F0(\(const char *shortopts, const char *longopts, const char* datatyp\
e, const char *glossary\))A(struct)108 489.6 Q F3(ar)2.5 E(g_\214le)-.1
E F0(*)A F3(ar)2.5 E(g_\214len)-.1 E F0(\(const char *shortopts, const \
char *longopts, const char* datatype, int mincount, int maxcount, const\
 char *glossary\))A(struct)108 506.4 Q F3(ar)2.5 E(g_date)-.1 E F0(*)A
F3(ar)2.5 E(g_date0)-.1 E F0(const char* shortopts, const char* longopt\
s, const char* format, const char* datatype, const char *glossary\))A
(struct)108 518.4 Q F3(ar)2.5 E(g_date)-.1 E F0(*)A F3(ar)2.5 E(g_date1)
-.1 E F0(const char* shortopts, const char* longopts, const char* forma\
t, const char* datatype, const char *glossary\))A(struct)108 530.4 Q F3
(ar)2.5 E(g_date)-.1 E F0(*)A F3(ar)2.5 E(g_daten)-.1 E F0(const char* \
shortopts, const char* longopts, const char* format, const char* dataty\
pe, int mincount, int maxcount, const char *glossary\))A(struct)108
547.2 Q F3(ar)2.5 E(g_r)-.1 E(em)-.18 E F0(*)A F3(ar)2.5 E(g_r)-.1 E(em)
-.18 E F0(\(const char *datatype, const char *glossary\))A(struct)108
559.2 Q F3(ar)2.5 E(g_end)-.1 E F0(*)A F3(ar)2.5 E(g_end)-.1 E F0
(\(int max)A(errors\))-.15 E(int)108 576 Q F3(ar)2.5 E(g_nullcheck)-.1 E
F0(\(v)A(oid **ar)-.2 E(gtable\))-.18 E(int)108 588 Q F3(ar)2.5 E
(g_parse)-.1 E F0(\(int ar)A(gc, char **ar)-.18 E(gv)-.18 E 2.5(,v)-.65
G(oid **ar)-2.7 E(gtable\))-.18 E -.2(vo)108 600 S(id).2 E F3(ar)2.5 E
(g_print_option)-.1 E F0(\(FILE *fp, const char *shortopts, const char \
*longopts, const char *datatype, const char *suf)A<8c7829>-.25 E -.2(vo)
108 612 S(id).2 E F3(ar)2.5 E(g_print_syntax)-.1 E F0(\(FILE *fp, v)A
(oid **ar)-.2 E(gtable, const char *suf)-.18 E<8c7829>-.25 E -.2(vo)108
624 S(id).2 E F3(ar)2.5 E(g_print_syntaxv)-.1 E F0(\(FILE *fp, v)A
(oid **ar)-.2 E(gtable, const char *suf)-.18 E<8c7829>-.25 E -.2(vo)108
636 S(id).2 E F3(ar)2.5 E(g_print_glossary)-.1 E F0(\(FILE *fp, v)A
(oid **ar)-.2 E(gtable, const char *format\))-.18 E -.2(vo)108 648 S(id)
.2 E F3(ar)2.5 E(g_print_glossary_gnu)-.1 E F0(\(FILE *fp, v)A(oid **ar)
-.2 E(gtable\))-.18 E -.2(vo)108 660 S(id).2 E F3(ar)2.5 E(g_print_err)
-.1 E(ors)-.18 E F0(\(FILE *fp, struct ar)A
(g_end *end, const char *progname\))-.18 E -.2(vo)108 672 S(id).2 E F3
(ar)2.5 E(g_fr)-.1 E(eetable)-.18 E F0(\(v)A(oid **ar)-.2 E
(gtable, size_t n\))-.18 E F1(DESCRIPTION)72 688.8 Q F0(Ar)108 700.8 Q
.427(gtable is an ANSI C library for parsing GNU style command line ar)
-.18 F .426(guments with a minimum of fuss. It)-.18 F .052
(enables the programmer to de\214ne their program')108 712.8 R 2.552(sa)
-.55 G -.18(rg)-2.552 G .053
(ument syntax directly in the source code as an array of).18 F 1.45(str\
ucts. The command line is then parsed according to that speci\214cation\
 and the resulting v)108 724.8 R 1.45(alues stored)-.25 F(Ar)72 768 Q
158.135(gtable2\25513 Jan)-.18 F 208.585(2008 1)2.5 F 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(ARGT)72 48 Q 99.765(ABLE2\(3\) Ar)-.93 F
(gtable programmer')-.18 E 2.5(sm)-.55 G 99.765(anual ARGT)-2.5 F
(ABLE2\(3\))-.93 E(directly into user\255de\214ned program v)108 84 Q
(ariables where the)-.25 E 2.5(ya)-.15 G
(re accessible to the main program.)-2.5 E 1.469
(This man page is only for reference.)108 100.8 R 1.469
(Introductory documentation and e)6.469 F 1.47
(xample source code is typically)-.15 F 3.072(installed under)108 112.8
R/F1 10/Times-Bold@0 SF(/usr/local/shar)5.572 E(e/doc/ar)-.18 E
(gtable2/)-.1 E F0 3.072(and is also a)5.572 F -.25(va)-.2 G 3.072
(ilable from the ar).25 F 3.071(gtable homepage at)-.18 F(http://ar)108
124.8 Q(gtable.sourcefor)-.18 E(ge.net.)-.18 E F1(Constructing an ar)87
153.6 Q(g_<xxx> data structur)-.1 E(e)-.18 E F0(Each)108 165.6 Q F1(ar)
3.199 E(g_<xxx>)-.1 E F0 .699(struct has it o)3.199 F .699
(wn unique set of constructor functions \(de\214ned abo)-.25 F -.15(ve)
-.15 G 3.2(\)w).15 G .7(hich are typically)-3.2 F(of the form:)108 177.6
Q(struct)108 194.4 Q F1(ar)2.5 E(g_int* ar)-.1 E(g_int0)-.1 E F0
(\("f", "foo", "<int>", "the foo f)A(actor"\))-.1 E(struct)108 206.4 Q
F1(ar)2.5 E(g_int* ar)-.1 E(g_int1)-.1 E F0
(\("f", "foo", "<int>", "the foo f)A(actor"\))-.1 E(struct)108 218.4 Q
F1(ar)2.5 E(g_int* ar)-.1 E(g_intn)-.1 E F0
(\("f", "foo", "<int>", 2, 4, "the foo f)A(actor"\))-.1 E 1.302
(where ar)108 235.2 R 1.302(g_int0\(\) and ar)-.18 F 1.302
(g_int1\(\) are merely abbre)-.18 F 1.301(viated forms of ar)-.25 F
3.801(g_intn\(\). The)-.18 F 3.801(ya)-.15 G 1.301(re pro)-3.801 F 1.301
(vided for con-)-.15 F -.15(ve)108 247.2 S .061
(nience when de\214ning command line options that ha).15 F .361 -.15
(ve e)-.2 H .061(ither zero\255or\255one occurrences \(mincount=0,max-)
.15 F(count=1\) or e)108 259.2 Q
(xactly one occurrence \(mincount=1,maxcount=1\) respecti)-.15 E -.15
(ve)-.25 G(ly).15 E(.)-.65 E .94
(The shortopts="f" parameter de\214nes the option')108 276 R 3.439(ss)
-.55 G .939(hort form tag \(e)-3.439 F 3.439(g-)-.15 G 3.439
(f\). Multiple)-3.439 F(alternati)3.439 E 1.239 -.15(ve t)-.25 H .939
(ags may be).15 F .797(de\214ned by concatenating them \(e)108 288 R
3.297(gs)-.15 G .797
(hortopts="abc" de\214nes options \255a, \255b and \255c as equi)-3.297
F -.25(va)-.25 G 3.298(lent\). Specify).25 F
(shortopts=NULL when no short option is required.)108 300 Q 1.583
(The longopts="foo" parameter de\214nes the option')108 316.8 R 4.082
(sl)-.55 G 1.582(ong form tag \(e)-4.082 F 4.082<67ad>-.15 G 4.082
(\255foo\). Multiple)-4.082 F(alternati)4.082 E 1.882 -.15(ve l)-.25 H
(ong).15 E 1.626(form tags may be separated by commas \(e)108 328.8 R
4.126(gl)-.15 G 1.627
(ongopts="size,limit" de\214nes \255\255size and \255\255limit\).)-4.126
F 1.627(Do not)6.627 F(include an)108 340.8 Q 2.5(yw)-.15 G
(hitespace in the longopts string.)-2.5 E
(Specify longopts=NULL when no long option is required.)5 E(If both sho\
rtopts and longopts are NULL then the option is an untagged ar)108 357.6
Q(gument.)-.18 E 1.08(The datatype="<int>" parameter is a descripti)108
374.4 R 1.379 -.15(ve s)-.25 H 1.079(tring that denotes the ar).15 F
1.079(gument data type in error mes-)-.18 F .084
(sages, as in \255\255foo=<int>.)108 386.4 R .085
(Specifying datatype=NULL indicates the def)5.084 F .085
(ault datatype should be used.)-.1 F(Spec-)5.085 E
(ifying datatype="" ef)108 398.4 Q(fecti)-.25 E -.15(ve)-.25 G
(ly disables the datatype display).15 E(.)-.65 E .668(The mincount=2 an\
d maxcount=3 parameters specify the minimum and maximum number of occur\
rences)108 415.2 R 1.009(of the option on the command line.)108 427.2 R
1.01(If the command line option does not appear the required number of)
6.009 F(times then the parser reports a syntax error)108 439.2 Q(.)-.55
E .697(The glossary="the foo f)108 456 R .697
(actor" parameter is another descripti)-.1 F .997 -.15(ve s)-.25 H .696
(tring. It appears only in the glossary table).15 F
(that is generated automatically by the)108 468 Q F1(ar)2.5 E
(g_print_glossary)-.1 E F0(function \(described later\).)2.5 E/F2 10
/Courier@0 SF(\255f, -\255foo=<int>)144 484.8 Q(the foo factor)24 E F0(\
Specifying a NULL glossary string causes that option to be omitted from\
 the glossary table.)108 501.6 Q F1(LITERAL COMMAND LINE OPTIONS)87
518.4 Q F0(\255x, \255y)108 530.4 Q 2.5<2cad>-.65 G
(z, \255\255help, \255\255v)-2.5 E(erbose)-.15 E(struct)108 547.2 Q F1
(ar)2.5 E(g_lit)-.1 E F0({)115.5 559.2 Q(struct)115.5 571.2 Q F1(ar)2.5
E(g_hdr)-.1 E F0 2.5(hdr; /*)2.5 F(internal ar)2.5 E(gtable header */)
-.18 E(int count;)115.5 583.2 Q
(/* number of matching command line options */)27.5 E(};)115.5 595.2 Q
.234(Literal options tak)108 612 R 2.734(en)-.1 G 2.734(oa)-2.734 G -.18
(rg)-2.734 G .234(ument v).18 F .235(alues. Upon a successful parse,)
-.25 F/F3 10/Times-Italic@0 SF(count)2.735 E F0 .235
(is guaranteed to be within the)2.735 F F3(min-)2.735 E(count)108 624 Q
F0(and)2.5 E F3(maxcount)2.5 E F0(limits speci\214ed at construction.)
2.5 E F1(INTEGER COMMAND LINE OPTIONS)87 640.8 Q F0
(\255x2, \255z 32MB, \255\255size=734kb, \255\255he)108 652.8 Q 2.5(x0)
-.15 G(x7, \255\255binary 0b10011010, \255\255octal 0o123)-2.5 E(Ar)108
669.6 Q .97(gtable accepts command line inte)-.18 F .969
(gers in decimal \(e)-.15 F 3.469(g1)-.15 G .969(23\), he)-3.469 F .969
(xadecimal \(e)-.15 F 3.469(g0)-.15 G .969(xFF12\), octal \(e)-3.469 F
3.469(g0)-.15 G(o123\))-3.469 E 1.892(and binary \(e)108 681.6 R 4.392
(g0)-.15 G 1.893(b0101110\) formats. It also accepts inte)-4.392 F 1.893
(gers that are suf)-.15 F<8c78>-.25 E 1.893(ed by "KB" \(x1024\), "MB")
-.15 F(\(x1048576\) or "GB" \(x1073741824\). All characters are case in\
sensiti)108 693.6 Q -.15(ve)-.25 G(struct)108 710.4 Q F1(ar)2.5 E(g_int)
-.1 E F0({)115.5 722.4 Q(Ar)72 768 Q 158.135(gtable2\25513 Jan)-.18 F
208.585(2008 2)2.5 F 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(ARGT)72 48 Q 99.765(ABLE2\(3\) Ar)-.93 F
(gtable programmer')-.18 E 2.5(sm)-.55 G 99.765(anual ARGT)-2.5 F
(ABLE2\(3\))-.93 E(struct)115.5 84 Q/F1 10/Times-Bold@0 SF(ar)2.5 E
(g_hdr)-.1 E F0 2.5(hdr; /*)2.5 F(internal ar)2.5 E(gtable header */)
-.18 E(int count;)115.5 96 Q(/* number of v)27.5 E(alues returned in i)
-.25 E -.25(va)-.25 G(l[] */).25 E(int *i)115.5 108 Q -.25(va)-.25 G 25
(l; /*).25 F(array of parsed inte)2.5 E(ger v)-.15 E(alues */)-.25 E(};)
115.5 120 Q 1.298(Upon a successful parse,)108 136.8 R/F2 10
/Times-Italic@0 SF(count)3.798 E F0 1.298
(is guaranteed to be within the)3.798 F F2(mincount)3.798 E F0(and)3.797
E F2(maxcount)3.797 E F0 1.297(limits set for the)3.797 F .064
(option at construction with the appropriate v)108 148.8 R .064
(alues store in the)-.25 F F2(ival)2.564 E F0(array)2.565 E 5.065(.T)
-.65 G .065(he parser will not accept an)-5.065 F 2.565(yv)-.15 G(al-)
-2.815 E(ues be)108 160.8 Q(yond that limit.)-.15 E .474(Hint: It is le)
108 177.6 R -.05(ga)-.15 G 2.973(lt).05 G 2.973(os)-2.973 G .473(et def)
-2.973 F .473(ault v)-.1 F .473(alues in the)-.25 F F2(ival)2.973 E F0
.473(array prior to calling the)2.973 F F1(ar)2.973 E(g_parse)-.1 E F0
.473(function. Ar)2.973 F .473(gtable will)-.18 F(not alter)108 189.6 Q
F2(ival)2.5 E F0(entries for which no command line ar)2.5 E
(gument is recei)-.18 E -.15(ve)-.25 G(d.).15 E(Hint:)108 206.4 Q F2
(Unta)3.718 E -.1(gge)-.1 G(d).1 E F0 1.218(numeric ar)3.718 F 1.218
(guments are not recommended because GNU getopt mistak)-.18 F 1.219
(es ne)-.1 F -.05(ga)-.15 G(ti).05 E 1.519 -.15(ve v)-.25 H(alues)-.1 E
(\(e)108 218.4 Q 3.639(g-)-.15 G 1.139(123\) for tagged options \(e)
-3.639 F 3.639(g-)-.15 G 3.638(1-)-3.639 G 3.638(2-)-3.638 G(3\).)-3.638
E F2 -.76 -.92(Ta g g e)6.138 H(d).92 E F0(ar)3.638 E 1.138(guments \(e)
-.18 F 3.638(g-)-.15 G 3.638(x-)-3.638 G 1.138
(123, --tag=-123\) do not suf)-3.638 F 1.138(fer this)-.25 F(problem.)
108 230.4 Q F1(REAL/DOUBLE COMMAND LINE OPTIONS)87 247.2 Q F0(\255x2.23\
4, \255y 7e\25503, \255z\2553.3E+6, \255\255pi=3.1415, \255\255toleranc\
e 1.0E-6)108 259.2 Q(struct)108 276 Q F1(ar)2.5 E(g_dbl)-.1 E F0({)115.5
288 Q(struct)115.5 300 Q F1(ar)2.5 E(g_hdr)-.1 E F0 2.5(hdr; /*)2.5 F
(internal ar)2.5 E(gtable header */)-.18 E(int count;)115.5 312 Q
(/* number of v)27.5 E(alues returned in dv)-.25 E(al[] */)-.25 E
(double *dv)115.5 324 Q 17.5(al; /*)-.25 F(array of parsed double v)2.5
E(alues */)-.25 E(};)115.5 336 Q(Same as)108 352.8 Q F1(ar)2.5 E(g_int)
-.1 E F0 -.15(ex)2.5 G(cept the parsed v).15 E(alues are stored in)-.25
E F2(dval)2.5 E F0(as doubles.)2.5 E F1(STRING COMMAND LINE OPTIONS)87
369.6 Q F0(\255Dmacro, \255t mytitle, \255m "my message string", \255\
\255title="hello w)108 381.6 Q(orld")-.1 E(struct)108 398.4 Q F1(ar)2.5
E(g_str)-.1 E F0({)115.5 410.4 Q(struct)115.5 422.4 Q F1(ar)2.5 E(g_hdr)
-.1 E F0 2.5(hdr; /*)2.5 F(internal ar)2.5 E(gtable header */)-.18 E
(int count;)115.5 434.4 Q(/* number of strings returned in sv)27.5 E
(al[] */)-.25 E(const char **sv)115.5 446.4 Q 5(al; /*)-.25 F
(array of pointers to parsed ar)2.5 E(gument strings */)-.18 E(};)115.5
458.4 Q .26(Same as)108 475.2 R F1(ar)2.76 E(g_int)-.1 E F0 -.15(ex)2.76
G .26(cept pointers to the parsed strings are returned in).15 F F2(sval)
2.761 E F0 .261(rather than a separate cop)2.761 F 2.761(yo)-.1 G 2.761
(ft)-2.761 G(he)-2.761 E 2.626(string. Indeed,)108 487.2 R .126
(these pointers actually reference the original string b)2.626 F(uf)-.2
E .126(fers stored in ar)-.25 F .126(gv[], so their contents)-.18 F .156
(should not be altered.)108 499.2 R(Ho)5.156 E(we)-.25 E -.15(ve)-.25 G
.956 -.4(r, i).15 H 2.656(ti).4 G 2.656(sl)-2.656 G -2.25 -.15(eg a)
-2.656 H 2.656(lt).15 G 2.656(oi)-2.656 G .156
(nitialise the string pointers in the)-2.656 F F2(sval)2.657 E F0 .157
(array to reference user)2.657 F(-)-.2 E .019(supplied def)108 511.2 R
.019(ault strings prior to calling ar)-.1 F 2.519(g_parse. Ar)-.18 F
.019(gtable will only alter the contents of)-.18 F F2(sval)2.518 E F0
.018(when match-)2.518 F(ing command line ar)108 523.2 Q
(guments are detected.)-.18 E F1
(REGULAR EXPRESSION COMMAND LINE OPTIONS)87 540 Q F0
(commit, update, \255\255command=commit, \255\255command=update)108 552
Q(struct)108 568.8 Q F1(ar)2.5 E(g_r)-.1 E(ex)-.18 E F0({)115.5 580.8 Q
(struct)115.5 592.8 Q F1(ar)2.5 E(g_hdr)-.1 E F0 2.5(hdr; /*)2.5 F
(internal ar)2.5 E(gtable header */)-.18 E(int count;)115.5 604.8 Q
(/* number of strings returned in sv)27.5 E(al[] */)-.25 E
(const char **sv)115.5 616.8 Q 5(al; /*)-.25 F
(array of pointers to parsed ar)2.5 E(gument strings */)-.18 E(};)115.5
628.8 Q .782(Similar to)108 645.6 R F1(ar)3.282 E(g_str)-.1 E F0 -.15
(ex)3.282 G .782(cept the string ar).15 F .782(gument v)-.18 F .783
(alues are only accepted if the)-.25 F 3.283(ym)-.15 G .783
(atch a prede\214ned re)-3.283 F(gular)-.15 E -.15(ex)108 657.6 S 4.662
(pression. Re).15 F 2.162(gular e)-.15 F 2.162
(xpressions are useful for matching command line k)-.15 F -.15(ey)-.1 G
-.1(wo).15 G 2.161(rds, particularly if case).1 F(insensiti)108 669.6 Q
.354 -.15(ve s)-.25 H .054(trings or pattern matching is required.).15 F
.055(The re)5.055 F .055(gular e)-.15 F .055
(xpression is de\214ned by the)-.15 F F2(pattern)2.555 E F0(parame-)
2.555 E .808(ter passed to the)108 681.6 R F2(ar)3.308 E(g_r)-.37 E -.2
(ex)-.37 G F0 .808(constructor and e)3.508 F -.25(va)-.25 G .808
(luated using re).25 F(ge)-.15 E 3.307(x. Its)-.15 F(beha)3.307 E .807
(viour can be controlled via stan-)-.2 F .701(dard re)108 693.6 R(ge)
-.15 E 3.201(xb)-.15 G .701(it \215ags. These are passed to ar)-3.201 F
.701(gtable via the)-.18 F F2<8d61>3.201 E(gs)-.1 E F0 .701
(parameter in the)3.201 F F2(ar)3.202 E(g_r)-.37 E -.2(ex)-.37 G F0
(constructor)3.402 E 3.202(.H)-.55 G -.25(ow)-3.202 G(-).25 E -2.15 -.25
(ev e)108 705.6 T 4.294(rt).25 G 1.794(he only tw)-4.294 F 4.294(oo)-.1
G 4.294(ft)-4.294 G 1.794(he standard re)-4.294 F(ge)-.15 E 4.294<788d>
-.15 G 1.794(ags are rele)-4.294 F -.25(va)-.25 G 1.794(nt to ar).25 F
1.794(gtable, namely REG_EXTENDED \(use)-.18 F -.15(ex)108 717.6 S .995
(tended re).15 F .995(gular e)-.15 F .996(xpressions rather than basic \
ones\) and REG_ICASE \(ignore case\). These \215ags may be)-.15 F
(logically ORed if desired.)108 729.6 Q(See)5 E F1 -.18(re)2.5 G
(gex\(3\)).18 E F0(for more details of re)2.5 E(gular e)-.15 E
(xpression matching.)-.15 E(Ar)72 768 Q 158.135(gtable2\25513 Jan)-.18 F
208.585(2008 3)2.5 F 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(ARGT)72 48 Q 99.765(ABLE2\(3\) Ar)-.93 F
(gtable programmer')-.18 E 2.5(sm)-.55 G 99.765(anual ARGT)-2.5 F
(ABLE2\(3\))-.93 E .364(Restrictions: Ar)108 84 R .364
(gtable does not support)-.18 F/F1 10/Times-Bold@0 SF(ar)2.864 E(g_r)-.1
E(ex)-.18 E F0 .363(functionality under Microsoft W)2.864 F(indo)-.4 E
.363(ws platforms because)-.25 F
(the Microsoft compilers do include the necessary)108 96 Q F1 -.18(re)
2.5 G(gex).18 E F0(support as standard.)2.5 E F1(FILEN)87 112.8 Q
(AME COMMAND LINE OPTIONS)-.2 E F0(\255o my\214le, \255Ihome/foo/bar)108
124.8 Q 2.5<2cad>-.4 G(\255input=~/doc/letter)-2.5 E
(.txt, \255\255name a.out)-.55 E(struct)108 141.6 Q F1(ar)2.5 E
(g_\214le)-.1 E F0({)115.5 153.6 Q(struct)115.5 165.6 Q F1(ar)2.5 E
(g_hdr)-.1 E F0 12.5(hdr; /*)2.5 F(internal ar)2.5 E(gtable header */)
-.18 E(int count;)115.5 177.6 Q
(/* number of \214lename strings returned */)37.5 E
(const char **\214lename;)115.5 189.6 Q
(/* pointer to full \214lename string */)7.5 E(const char **basename;)
115.5 201.6 Q(/* pointer to \214lename e)7.5 E(xcluding leading path */)
-.15 E(const char **e)115.5 213.6 Q 2.5(xtension; /*)-.15 F
(pointer to the \214lename e)2.5 E(xtension */)-.15 E(};)115.5 225.6 Q
.402(Similar to)108 242.4 R F1(ar)2.902 E(g_str)-.1 E F0 -.2(bu)2.902 G
2.902(tt).2 G .402(he ar)-2.902 F .403(gument strings are presumed to r\
efer to \214lenames hence some additional pars-)-.18 F 1.309
(ing is done to separate out the \214lename')108 254.4 R 3.809(sb)-.55 G
1.309(asename and e)-3.809 F 1.309(xtension \(if the)-.15 F 3.809(ye)
-.15 G 3.809(xist\). The)-3.959 F 1.308(three arrays \214le-)3.808 F
.013(name[], basename[], e)108 266.4 R .013
(xtension[] each store up to maxcount entries, and the i')-.15 F .014
(th entry of each of these arrays)-.18 F(refer to dif)108 278.4 Q
(ferent components of the same string b)-.25 E(uf)-.2 E(fer)-.25 E(.)
-.55 E -.15(Fo)108 295.2 S 2.5(re).15 G(xample,)-2.65 E F1
(\255o /home/heitmann/mydir/f)2.5 E(oo.txt)-.25 E F0 -.1(wo)2.5 G
(uld be parsed as:).1 E 2.5(\214lename[i] =)136.346 307.2 R
("/home/heitmann/mydir/foo.txt")2.5 E 2.5(basename[i] =)136.346 319.2 R
("foo.txt")55 E -.15(ex)136.346 331.2 S(tension[i] =).15 E(".txt")62.5 E
.195(If the \214lename has no leading path then the basename is the sam\
e as the \214lename.)108 348 R .194(If no e)5.194 F .194
(xtension could be)-.15 F(identi\214ed then it is gi)108 360 Q -.15(ve)
-.25 G 2.5(na).15 G 2.5(sN)-2.5 G 2.5(ULL. Extensions)-2.5 F
(are considered as all te)2.5 E(xt from the last dot in the \214lename.)
-.15 E .385(Hint: Ar)108 376.8 R .385(gtable only e)-.18 F -.15(ve)-.25
G 2.885(rt).15 G .385(reats the \214lenames as strings and ne)-2.885 F
-.15(ve)-.25 G 2.885(ra).15 G .385
(ttempts to open them as \214les or perform)-2.885 F(an)108 388.8 Q 2.5
(yd)-.15 G(irectory lookups on them.)-2.5 E F1 -.35(DA)87 405.6 S
(TE/TIME COMMAND LINE OPTIONS)-.6 E F0
(12/31/04, \255d 1982\25511\25528, \255\255time 23:59)108 417.6 Q
(struct)108 434.4 Q F1(ar)2.5 E(g_date)-.1 E F0({)115.5 446.4 Q(struct)
115.5 458.4 Q F1(ar)2.5 E(g_hdr)-.1 E F0 2.5(hdr; /*)2.5 F(internal ar)
2.5 E(gtable header */)-.18 E(const char *format;)115.5 470.4 Q(/* user)
5 E(-supplied date format string that w)-.2 E
(as passed to constructor */)-.1 E(int count;)115.5 482.4 Q
(/* number of datestamps returned in tmv)27.5 E(al[] */)-.25 E
(struct tm *tmv)115.5 494.4 Q 7.5(al; /*)-.25 F(array of datestamps */)
2.5 E(};)115.5 506.4 Q 1.181
(Accepts a timestamp string from the command line and con)108 523.2 R
-.15(ve)-.4 G 1.181(rts it to).15 F/F2 10/Times-Italic@0 SF 1.181
(struct tm)3.681 F F0 1.181(format using the system)3.681 F F1(str)108
535.2 Q(ptime)-.1 E F0 .529
(function. The time format is de\214ned by the)3.029 F F2(format)3.029 E
F0 .53(string passed to the)3.029 F F2(ar)3.03 E(g_date)-.37 E F0
(constructor)3.03 E 3.03(,a)-.4 G(nd)-3.03 E(is passed directly to)108
547.2 Q F1(str)2.5 E(ptime)-.1 E F0 2.5(.S)C(ee)-2.5 E F1(str)2.5 E
(ptime\(3\))-.1 E F0(for more details on the format string.)2.5 E 2.317
(Restrictions: Ar)108 564 R 2.317(gtable does not support)-.18 F F1(ar)
4.816 E(g_date)-.1 E F0 2.316(functionality under Microsoft W)4.816 F
(indo)-.4 E 2.316(ws because the)-.25 F
(Microsoft compilers do include the necessary)108 576 Q F1(str)2.5 E
(ptime)-.1 E F0(support as standard.)2.5 E F1(REMARK OPTIONS)87 592.8 Q
F0(struct)108 604.8 Q F1(ar)2.5 E(g_r)-.1 E(em)-.18 E F0({)115.5 616.8 Q
(struct)115.5 628.8 Q F1(ar)2.5 E(g_hdr)-.1 E F0 2.5(hdr; /*)2.5 F
(internal ar)2.5 E(gtable header */)-.18 E(};)115.5 640.8 Q(The)108
657.6 Q F1(ar)4.07 E(g_r)-.1 E(em)-.18 E F0 1.57(struct is a dummy stru\
ct in the sense it does not represent a command line option to be)4.07 F
2.907(parsed. Instead)108 669.6 R .407(it pro)2.907 F .407
(vides a means to include additional)-.15 F F2(datatype)2.906 E F0(and)
2.906 E F2(glossary)2.906 E F0 .406(strings in the output of the)2.906 F
F1(ar)108 681.6 Q(g_print_syntax)-.1 E F0(,)A F1(ar)2.542 E
(g_print_syntaxv)-.1 E F0 2.542(,a)C(nd)-2.542 E F1(ar)2.542 E .042
(g_print_glossary functions)-.1 F F0 5.042(.A)C 2.542(ss)-5.042 G(uch,)
-2.542 E F1(ar)2.542 E(g_r)-.1 E(em)-.18 E F0 .043(structs may)2.543 F
1.243(be used in the ar)108 693.6 R 1.242
(gument table to insert additional lines of te)-.18 F 1.242
(xt into the glossary descriptions or to insert)-.15 F(additional te)108
705.6 Q(xt \214elds into the syntax description.)-.15 E(Ar)72 768 Q
158.135(gtable2\25513 Jan)-.18 F 208.585(2008 4)2.5 F 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(ARGT)72 48 Q 99.765(ABLE2\(3\) Ar)-.93 F
(gtable programmer')-.18 E 2.5(sm)-.55 G 99.765(anual ARGT)-2.5 F
(ABLE2\(3\))-.93 E/F1 10/Times-Bold@0 SF(END\255OF\255T)87 84 Q
(ABLE OPTION)-.9 E F0(struct)108 96 Q F1(ar)2.5 E(g_end)-.1 E F0({)115.5
108 Q(struct)115.5 120 Q F1(ar)2.5 E(g_hdr)-.1 E F0 2.5(hdr; /*)2.5 F
(internal ar)2.5 E(gtable header */)-.18 E(int count;)115.5 132 Q
(/* number of errors returned */)27.5 E(int *error;)115.5 144 Q
(/* array of error codes */)25 E -.2(vo)115.5 156 S(id **parent;).2 E
(/* pointers to the erroneous command line options */)17.5 E
(const char **ar)115.5 168 Q(gv)-.18 E
(al; /* pointers to the erroneous command line ar)-.25 E(gument v)-.18 E
(alues */)-.25 E(};)115.5 180 Q(Ev)108 196.8 Q(ery ar)-.15 E
(gument table must ha)-.18 E .3 -.15(ve a)-.2 H(n).15 E F1(ar)2.5 E
(g_end)-.1 E F0(structure as its last entry)2.5 E(.)-.65 E
(It marks the end of an ar)108 208.8 Q
(gument table and stores the error codes generated)-.18 E
(by the parser as it processed the ar)108 220.8 Q(gument table.)-.18 E
(The)108 232.8 Q/F2 10/Times-Italic@0 SF(maxerr)2.5 E(or)-.45 E(s)-.1 E
F0(parameter passed to the)2.5 E F1(ar)2.5 E(g_end)-.1 E F0(constructor)
2.5 E
(speci\214es the maximum number of errors that the structure can store.)
108 244.8 Q(An)108 256.8 Q 2.5(yf)-.15 G
(urther errors are discarded and replaced with the single error code)
-2.5 E
(ARG_ELIMIT which is later reported to the user by the message "too man)
108 268.8 Q 2.5(ye)-.15 G(rrors".)-2.5 E(A)108 280.8 Q F2(maxerr)2.5 E
(or)-.45 E(s)-.1 E F0(limit of 20 is quite reasonable.)2.5 E(The)108
297.6 Q F1(ar)2.5 E(g_print_err)-.1 E(ors)-.18 E F0
(function will print the errors stored)2.5 E(in the)108 309.6 Q F1(ar)
2.5 E(g_end)-.1 E F0(struct in the same order as the)2.5 E 2.5(yo)-.15 G
(ccurred,)-2.5 E(so there is no need to understand the internals of the)
108 321.6 Q F1(ar)2.5 E(g_end)-.1 E F0(struct.)2.5 E/F3 10.95
/Times-Bold@0 SF(FUNCTION REFERENCE)72 350.4 Q F1(int ar)87 362.4 Q
(g_nullcheck \(v)-.1 E(oid **ar)-.1 E(gtable\))-.1 E F0 1.454
(Returns non\255zero if the)108 374.4 R F2(ar)3.954 E(gtable[])-.37 E F0
1.454(array contains an)3.954 F 3.954(yN)-.15 G 1.455
(ULL entries up until the terminating)-3.954 F F1(ar)3.955 E(g_end*)-.1
E F0(entry)108 386.4 Q 5(.R)-.65 G(eturns zero otherwise.)-5 E F1
(int ar)87 403.2 Q(g_parse \(int ar)-.1 E(gc, char **ar)-.1 E(gv)-.1 E
2.5(,v)-.55 G(oid **ar)-2.6 E(gtable\))-.1 E F0 -.15(Pa)108 415.2 S .17
(rse the command line ar).15 F .17(guments in)-.18 F F2(ar)2.67 E(gv[])
-.37 E F0 .17(using the command line syntax speci\214ed in)2.67 F F2(ar)
2.67 E(gtable[])-.37 E F0 2.67(,r)C(eturn-)-2.67 E .362
(ing the number of errors encountered.)108 427.2 R .363
(Error details are recorded in the ar)5.363 F .363(gument table')-.18 F
(s)-.55 E F1(ar)2.863 E(g_end)-.1 E F0(structure)2.863 E .65
(from where the)108 439.2 R 3.15(yc)-.15 G .65
(an be displayed later with the)-3.15 F F1(ar)3.15 E(g_print_err)-.1 E
(ors)-.18 E F0 3.15(function. Upon)3.15 F 3.15(as)3.15 G .65
(uccessful parse, the)-3.15 F F1(ar)108 451.2 Q(g_xxx)-.1 E F0 .561
(structures referenced in)3.061 F F2(ar)3.061 E(gtable[])-.37 E F0 .562
(will contain the ar)3.061 F .562(gument v)-.18 F .562(alues e)-.25 F
.562(xtracted from the command)-.15 F(line.)108 463.2 Q F1 -.1(vo)87 480
S .225(id ar).1 F .225(g_print_option \(FILE *fp, const char *shortopts\
, const char *longopts, const char *datatype, const)-.1 F
(char *suf\214x\))108 492 Q F0 1.035(This function prints an option')108
504 R 3.535(ss)-.55 G 1.035(yntax, as in)-3.535 F F1
(\255K|\255\255scalar=<int>)3.535 E F0 3.535(,w)C 1.035
(here the short options, long options,)-3.535 F .07
(and datatype are all gi)108 516 R -.15(ve)-.25 G 2.57(na).15 G 2.57(sp)
-2.57 G .069(arameters of this function.)-2.57 F .069
(It is primarily used within the)5.069 F F1(ar)2.569 E(g_xxx)-.1 E F0
(structures')2.569 E F2(err)108 528 Q(orfn)-.45 E F0 .656
(functions as a w)3.156 F .656(ay of displaying an option')-.1 F 3.156
(ss)-.55 G .657(yntax inside of error messages. Ho)-3.156 F(we)-.25 E
-.15(ve)-.25 G 1.457 -.4(r, i).15 H 3.157(tc).4 G .657(an also)-3.157 F
.519(be used in user code if desired.)108 540 R(The)5.518 E F2(suf)3.018
E<8c78>-.18 E F0 .518(string is pro)3.018 F .518(vided as a con)-.15 F
-.15(ve)-.4 G .518(nience for appending ne).15 F .518(wlines and)-.25 F
(so forth to the end of the display and can be gi)108 552 Q -.15(ve)-.25
G 2.5(na).15 G 2.5(sN)-2.5 G(ULL if not required.)-2.5 E F1 -.1(vo)87
568.8 S(id ar).1 E(g_print_syntax \(FILE *fp, v)-.1 E(oid **ar)-.1 E
(gtable, const char *suf\214x\))-.1 E F0 .18
(Prints the GNU style command line syntax for the gi)108 580.8 R -.15
(ve)-.25 G 2.681(na).15 G -.18(rg)-2.681 G .181
(ument table, as in: [\255abcv] [\255\255scalar=<n>] [\255o).18 F
(my\214le] <\214le> [<\214le>])108 592.8 Q(The)108 604.8 Q F2(suf)2.8 E
<8c78>-.18 E F0 .3(string is pro)2.8 F .3(vided as a con)-.15 F -.15(ve)
-.4 G .3(nience for appending ne).15 F .3
(wlines and so forth to the end of the display)-.25 F(and can be gi)108
616.8 Q -.15(ve)-.25 G 2.5(na).15 G 2.5(sN)-2.5 G(ULL if not required.)
-2.5 E F1 -.1(vo)87 633.6 S(id ar).1 E(g_print_syntaxv \(FILE *fp, v)-.1
E(oid **ar)-.1 E(gtable, const char *suf\214x\))-.1 E F0 1.391
(Prints the v)108 645.6 R 1.392
(erbose form of the command line syntax for the gi)-.15 F -.15(ve)-.25 G
3.892(na).15 G -.18(rg)-3.892 G 1.392
(ument table, as in: [\255a] [\255b] [\255c]).18 F
([\255\255scalar=<n>] [\255o my\214le] [\255v|\255\255v)108 657.6 Q
(erbose] <\214le> [<\214le>])-.15 E(The)108 669.6 Q F2(suf)2.8 E<8c78>
-.18 E F0 .3(string is pro)2.8 F .3(vided as a con)-.15 F -.15(ve)-.4 G
.3(nience for appending ne).15 F .3
(wlines and so forth to the end of the display)-.25 F(and can be gi)108
681.6 Q -.15(ve)-.25 G 2.5(na).15 G 2.5(sN)-2.5 G(ULL if not required.)
-2.5 E F1 -.1(vo)87 698.4 S(id ar).1 E(g_print_glossary \(FILE *fp, v)
-.1 E(oid **ar)-.1 E(gtable, const char *f)-.1 E(ormat\))-.25 E F0 .791
(Prints a glossary table describing each option in the gi)108 710.4 R
-.15(ve)-.25 G 3.291(na).15 G -.18(rg)-3.291 G .791(ument table.).18 F
(The)5.791 E F2(format)3.291 E F0 .792(string is passed to)3.291 F 1.243
(printf to control the formatting of each entry in the the glossary)108
722.4 R 6.243(.I)-.65 G 3.743(tm)-6.243 G 1.243(ust ha)-3.743 F 1.542
-.15(ve ex)-.2 H 1.242(actly tw).15 F 3.742(o")-.1 G 1.242(%s" format)
-3.742 F(Ar)72 768 Q 158.135(gtable2\25513 Jan)-.18 F 208.585(2008 5)2.5
F 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(ARGT)72 48 Q 99.765(ABLE2\(3\) Ar)-.93 F
(gtable programmer')-.18 E 2.5(sm)-.55 G 99.765(anual ARGT)-2.5 F
(ABLE2\(3\))-.93 E .317
(parameters as in "%\25525s %s\\n", the \214rst is for the option')108
84 R 2.817(ss)-.55 G .317(yntax and the second for its glossary string.)
-2.817 F(If)5.317 E(an option')108 96 Q 2.5(sg)-.55 G(lossary string is\
 NULL then that option in omitted from the glossary display)-2.5 E(.)
-.65 E/F1 10/Times-Bold@0 SF -.1(vo)87 112.8 S(id ar).1 E
(g_print_glossary_gnu \(FILE *fp, v)-.1 E(oid **ar)-.1 E(gtable\))-.1 E
F0 .058(An alternate form of)108 124.8 R F1(ar)2.558 E
(g_print_glossary\(\))-.1 E F0 .058
(that prints the glossary using strict GNU formatting con)2.558 F -.15
(ve)-.4 G(ntions).15 E(wherein long options are v)108 136.8 Q(ertically\
 aligned in a second column, and lines are wrapped at 80 characters.)
-.15 E F1 -.1(vo)87 153.6 S(id ar).1 E(g_print_err)-.1 E
(ors \(FILE *fp, struct ar)-.18 E(g_end *end, const char *pr)-.1 E
(ogname\))-.18 E F0 .855(Prints the details of all errors stored in the)
108 165.6 R/F2 10/Times-Italic@0 SF(end)3.356 E F0 .856(data structure.)
3.356 F(The)5.856 E F2(pr)3.356 E -.1(og)-.45 G(name).1 E F0 .856
(string is prepended to each)3.356 F(error message.)108 177.6 Q F1 -.1
(vo)87 194.4 S(id ar).1 E(g_fr)-.1 E(eetable \(v)-.18 E(oid ** ar)-.1 E
(gtable, size_t n\))-.1 E F0 .345(Deallocates the memory used by each)
108 206.4 R F1(ar)2.845 E(g_xxx)-.1 E F0 .345(struct referenced by)2.845
F F2(ar)2.845 E(gtable[])-.37 E F0 5.345(.I)C 2.845(td)-5.345 G .345
(oes this by calling)-2.845 F F1(fr)2.845 E(ee)-.18 E F0
(for each of the)108 218.4 Q F2(n)2.5 E F0(pointers in the ar)2.5 E
(gtable array and then nulling them for safety)-.18 E(.)-.65 E/F3 10.95
/Times-Bold@0 SF(FILES)72 247.2 Q F0(/usr/local/include/ar)108 259.2 Q
(gtable2.h)-.18 E(/usr/local/lib/libar)108 271.2 Q(gtable2.a)-.18 E
(/usr/local/lib/libar)108 283.2 Q(gtable2.so)-.18 E(/usr/local/man3/ar)
108 295.2 Q(gtable2.3)-.18 E(/usr/local/share/doc/ar)108 307.2 Q
(gtable2/)-.18 E(/usr/local/share/doc/ar)108 319.2 Q(gtable2/e)-.18 E
(xample/)-.15 E F3 -.548(AU)72 348 S(THOR).548 E F0(Ste)108 360 Q -.1
(wa)-.25 G(rt Heitmann <sheitmann@users.sourcefor).1 E(ge.net>)-.18 E
(Ar)72 768 Q 158.135(gtable2\25513 Jan)-.18 F 208.585(2008 6)2.5 F 0 Cg
EP
%%Trailer
end
%%EOF
